@using RailwayManagementSystem.Services
@model RailwayManagementSystem.Models.BookingInfo
@{
	ViewData["Title"] = "Create";
	var Stations = this.ViewContext.TempData["Stations"] as List<Station>;
}

<h1>Book Ticket</h1>

<hr />
<div class="row">
	<div class="col-md-4">
		<form asp-action="Create">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="form-group">
				<label asp-for="BookingDate" class="control-label"></label>
				<input asp-for="BookingDate" class="form-control" type="datetime-local" />
				<span asp-validation-for="BookingDate" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="SourceStation" class="control-label"></label>
				<select asp-for="SourceStation" class="form-control" id="sourceStation">
					<option value="">Select Source Station</option>
					@foreach (var station in @Stations)
					{
						<option value="@station.Id">@station.City</option>
					}
				</select>
				<span asp-validation-for="SourceStation" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="DestinationStation" class="control-label"></label>
				<select asp-for="DestinationStation" class="form-control" id="destinationStation">
					<option value="">Select Destination Station</option>
					@foreach (var station in @Stations)
					{
						<option value="@station.Id">@station.City</option>
					}
				</select>
				<span asp-validation-for="DestinationStation" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="TicketFare" class="control-label"></label>
				<label asp-for="TicketFare" class="form-control" id="ticketFare" disaled />
				<span asp-validation-for="TicketFare" class="text-danger"></span>
			</div>

			<div class="form-group">
				@if (LoginService.IsLoggedIn)
				{
					<input type="submit" value="Book Now" class="btn btn-primary" />
				}
				else
				{
					<input type="submit" value="Book Now" class="btn btn-primary" disabled />
				}
			</div>
		</form>
	</div>
</div>

<div>
	@if (LoginService.IsLoggedIn)
	{
		<a asp-action="Index">View Booked Tickets</a>
	}
</div>


@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script>
		document.addEventListener('DOMContentLoaded', function() {
			document.getElementById('sourceStation').addEventListener('change', calculateFare);
			document.getElementById('destinationStation').addEventListener('change', calculateFare);
		});

		function calculateFare() {
			var sourceStation = document.getElementById('sourceStation').value;
			var destinationStation = document.getElementById('destinationStation').value;

			if (sourceStation && destinationStation) {
				// Find the station ids and calculate the fare
				var sourceStationId = parseInt(sourceStation);
				var destinationStationId = parseInt(destinationStation);

				// Get the coordinates of the stations
				var stations = @Html.Raw(Json.Serialize(Stations));
				var sourceStationCoords = stations.find(station => station.Id === sourceStationId);
				var destinationStationCoords = stations.find(station => station.Id === destinationStationId);

				if (sourceStationCoords && destinationStationCoords) {
					var distance = calculateDistance(sourceStationCoords.Latitude, sourceStationCoords.Longitude, destinationStationCoords.Latitude, destinationStationCoords.Longitude);
					var fare = distance * 5;
					document.getElementById('ticketFare').value = fare.toFixed(2);
				} else {
					document.getElementById('ticketFare').value = '800';
				}
			} else {
				document.getElementById('ticketFare').value = '800';
			}
		}

		function calculateDistance(lat1, lon1, lat2, lon2) {
			var R = 6371; // Radius of the earth in km
			var dLat = deg2rad(lat2 - lat1);
			var dLon = deg2rad(lon1 - lon2);
			var a =
				Math.sin(dLat / 2) * Math.sin(dLat / 2) +
				Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *
				Math.sin(dLon / 2) * Math.sin(dLon / 2);
			var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
			var distance = R * c; // Distance in km
			return distance;
		}

		function deg2rad(deg) {
			return deg * (Math.PI / 180);
		}
	</script>
}
